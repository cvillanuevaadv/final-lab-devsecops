name: PIPELINE

on:

  push:
  workflow_dispatch:

jobs:
  
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0    
       
      - name: Escaneo SAST en Sonarcloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
    #- name: Comprobación de SonarQube Quality Gate 
      #id: sonarqube-quality-gate-check
      #uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
      #timeout-minutes: 5
      #env:
        #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          
      - name: Verificar carpeta de dependencias 1
        run: |
          ls -ltra

      - name: Instalación de librerías necesarias del proyecto
        run: npm install
        
      - name: Verificar carpeta de dependencias 2
        run: |
          cd node_modules
          ls -ltra

      - name: Leer package.json
        run: |
          ls -ltra
          cat package.json
          
      #- name: Run Dependency-Check
        #uses: dependency-check/Dependency-Check_Action@1.1.0
        #with:
          #project: 'lab-final'
          #path: '.'
          #format: 'HTML'
          #args: >
            #--failOnCVSS 7
            
      - name: Escaneo SCA con SNYK
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
           
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build Docker
        run: |
          docker build --tag z4nd3r/devsecops:latest .
          
      - name: Ejecución de Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'z4nd3r/devsecops:latest'
          format: 'table'
          #exit-code: 1
          #severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Push Docker
        run: | 
          docker push z4nd3r/devsecops
          
  Deploy:
    needs: Build
    runs-on: self-hosted
    
    steps:

    - name: Pull de la Imagen Docker
      run: |
        docker pull z4nd3r/devsecops:latest

    - name: Despliegue de la Aplicación
      run: |
        docker run -p 8081:80 --name lab-final-devsecops -d z4nd3r/devsecops:latest

    - name: Sleep para Escaneo DAST
      run: | 
        sleep 12 

    - name: Escaneo DAST con OWASP ZAP
      uses: zaproxy/action-baseline@v0.11.0
      with:
        target: 'http://localhost:8081'
        report: true

